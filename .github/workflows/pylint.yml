name: Pylint

    # Lint workflow for the Secure SMS project.  This job runs on pushes and
    # pull requests against the main branches.  It uses a matrix of
    # Python versions to ensure compatibility across supported versions and
    # runs pylint in non-blocking mode (--exit-zero) so that lint warnings
    # do not cause the build to fail.  Fix lint issues over time as you
    # iterate on the codebase.

    on:
      push:
        branches: [ "main", "master" ]
      pull_request:
        branches: [ "main", "master" ]

    permissions:
      contents: read

    jobs:
      lint:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            python-version: ["3.10", "3.11"]
        defaults:
          run:
            working-directory: secure-sms
        env:
          # Add the project directory to PYTHONPATH so pylint resolves imports correctly.
          PYTHONPATH: ${{ github.workspace }}/secure-sms
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python-version }}
              cache: pip

          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              pip install pylint

          - name: Run pylint (non-blocking)
            run: |
              files="$(git ls-files '*.py' | tr '\n' ' ')"
              if [ -z "$files" ]; then echo "No Python files to lint."; exit 0; fi
              pylint --exit-zero $files